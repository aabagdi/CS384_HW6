zero := fn f => fn x => x;
succ := fn n => (fn f => fn x => f ((n f) x));
four := succ (succ(succ(succ zero)));
pair := fn a => fn b => fn s => s a b;
fst :=  fn a => fn b => a;
snd :=  fn a => fn b => b;
p := pair zero zero;
predStep := fn p => pair (succ(p fst)) (p fst);
pred := fn n => ((n predStep) p) snd;
main := pred four; 